<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.koalateasoftware</groupId>
    <artifactId>PBLF</artifactId>
    <version>1.0</version>

    <!-- see https://github.com/cucumber/cucumber-java-skeleton/blob/master/pom.xml -->

    <properties>
        <!-- all the latest versions as found by looking at the maven rep -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <junit.version>4.12</junit.version>
        <java.appium.client>7.4.0</java.appium.client>
        <cucumber.version>6.9.0</cucumber.version>
        <maven.compiler.version>3.3</maven.compiler.version>
        <maven.surefire.plugin>2.22.2</maven.surefire.plugin> <!-- latest without M suffix -->
        <org.json>20201115</org.json>
        <org.testng>7.3.0</org.testng>
        <selenium.chrome.driver>3.141.59</selenium.chrome.driver>
        <selenium.firefox.driver>3.141.59</selenium.firefox.driver>
        <selenium.support>3.141.59</selenium.support>
        <bonigarcia.webdrivermanager>4.2.2</bonigarcia.webdrivermanager>
        <de.monochromata>4.0.86</de.monochromata>
    </properties>

    <dependencies>
        <!-- fundamental - give @Given and so on -->
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>${cucumber.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Needed for test runners -->
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>${cucumber.version}</version>
            <scope>test</scope>
        </dependency>
        <!--without _one_ of the following 2, it can't find things like org.openqa, so might as well have both -->
        <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-firefox-driver -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-firefox-driver</artifactId>
            <version>${selenium.firefox.driver}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-chrome-driver -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-chrome-driver</artifactId>
            <version>${selenium.chrome.driver}</version>
        </dependency>
        <!-- selenium-support is needed for the page factory -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-support</artifactId>
            <version>${selenium.support}</version>
            <scope>test</scope>
        </dependency>
        <!-- see https://github.com/bonigarcia/webdrivermanager - this could simplify web driver management -->
        <dependency>
            <groupId>io.github.bonigarcia</groupId>
            <artifactId>webdrivermanager</artifactId>
            <version>${bonigarcia.webdrivermanager}</version>
            <scope>test</scope>
        </dependency>

        <!-- to provide prettier HTML reports -->
        <dependency>
            <groupId>de.monochromata.cucumber</groupId>
            <artifactId>reporting-plugin</artifactId>
            <version>${de.monochromata}</version>
            <scope>test</scope>
        </dependency>

        <!-- Ability to talk to HTTP servers -->
        <!-- https://mvnrepository.com/artifact/io.appium/java-client -->
        <dependency>
            <groupId>io.appium</groupId>
            <artifactId>java-client</artifactId>
            <version>${java.appium.client}</version>
        </dependency>

        <!-- parsing of JSON -->
        <!-- https://mvnrepository.com/artifact/org.json/json -->
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>${org.json}</version>
        </dependency>

        <!-- for the soft asserts -->


        <!--
        this eliminates an error message about slf4j that comes about because of the use of the web driver manager
        It fails to solve the problem about it running a test, but not knowing that it has run any test -->
        <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-simple -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.30</version>
            <scope>test</scope>
        </dependency>

        <!--        <dependency>-->
        <!--            <groupId>org.testng</groupId>-->
        <!--            <artifactId>testng</artifactId>-->
        <!--            <version>${org.testng}</version>-->
        <!--            <scope>test</scope>-->
        <!--        </dependency>-->

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <plugin>
                <!-- to allow Maven to know how to run the cucumber tests -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
                <configuration>
                    <includes>
                        <!-- Run all testSuite test runners -->
                        <include>**/testSuite/runners/*.java</include>
                    </includes>
                    <failIfNoTests>true</failIfNoTests>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>